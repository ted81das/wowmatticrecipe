{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./pro/includes/gateways/braintree/js/braintree.js"],"names":["installedModules","__webpack_require__","moduleId","module","i","l","exports","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","rcpBraintreeHandleError","error","let","$","jQuery","form","empty","append","length","unblock","val","rcp_script_options","register","rcp_processing","RCP_Braintree_Registration","dropinInstance","hasCardDetails","init","on","mountUI","maybeBlockSubmit","tokenizePayment","e","gateway","document","getElementById","rcp_braintree_script_options","dropin_ui_config","authorization","container","threeDSecure","braintree","dropin","then","isPaymentMethodRequestable","requestableEvent","catch","rcp_get_gateway","stopPropagation","enter_card_details","registerTestInformation","setTimeout","event","this","prop","response","paymentMethodOptions","payment_method_options","additionalInformation","billingAddress","email","deliveryEmail","givenName","surname","phoneNumber","when","ajax","type","dataType","url","ajaxurl","data","action","nonce","validationResponse","success","braintree_empty_fields","amount","total","recurring_total","requestPaymentMethod","payload","liabilityShiftPossible","liabilityShifted","clearSelectedPaymentMethod","try_new_payment","find","rcp_submit_registration_form","fail","braintree_invalid_nonce","RCP_Braintree_Update_Card","recurringAmount","dropinArgs","preselectVaultedPaymentMethod","disableButton","button","please_wait","enableButton","preventDefault","off","submit"],"mappings":"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","file":"braintree.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/* global rcp_braintree_script_options */\n\njQuery( function( $ ) {\n\n\t/**\n\t * Braintree registration\n\t */\n\tvar RCP_Braintree_Registration = {\n\n\t\t/**\n\t\t * Braintree drop-in UI instance\n\t\t */\n\t\tdropinInstance: false,\n\n\t\t/**\n\t\t * Whether or not card details have been entered\n\t\t */\n\t\thasCardDetails: false,\n\n\t\t/**\n\t\t * Initialize\n\t\t */\n\t\tinit: function () {\n\n\t\t\t$( 'body' ).on( 'rcp_gateway_loaded', RCP_Braintree_Registration.mountUI );\n\t\t\t$( '#rcp_submit' ).on( 'click', RCP_Braintree_Registration.maybeBlockSubmit );\n\t\t\t$( 'body' ).on( 'rcp_registration_form_processed', RCP_Braintree_Registration.tokenizePayment );\n\n\t\t},\n\n\t\t/**\n\t\t * Mount the drop-in UI when the gateway is loaded\n\t\t *\n\t\t * @param e\n\t\t * @param gateway\n\t\t */\n\t\tmountUI: function( e, gateway ) {\n\n\t\t\tif ( ! document.getElementById( 'rcp-braintree-client-token' ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\trcp_braintree_script_options.dropin_ui_config = {\n\t\t\t\tauthorization: $( '#rcp-braintree-client-token' ).val(),\n\t\t\t\tcontainer: '#rcp-braintree-dropin-container',\n\t\t\t\tthreeDSecure: true\n\t\t\t};\n\n\t\t\tbraintree.dropin.create( rcp_braintree_script_options.dropin_ui_config ).then( function( dropinInstance ) {\n\t\t\t\tRCP_Braintree_Registration.dropinInstance = dropinInstance;\n\n\t\t\t\t// Flag as having payment details or not.\n\t\t\t\tif ( dropinInstance.isPaymentMethodRequestable() ) {\n\t\t\t\t\tRCP_Braintree_Registration.hasCardDetails = true;\n\t\t\t\t}\n\t\t\t\tdropinInstance.on( 'paymentMethodRequestable', function ( requestableEvent ) {\n\t\t\t\t\tRCP_Braintree_Registration.hasCardDetails = true;\n\t\t\t\t} );\n\t\t\t\tdropinInstance.on( 'noPaymentMethodRequestable', function ( requestableEvent ) {\n\t\t\t\t\tRCP_Braintree_Registration.hasCardDetails = false;\n\t\t\t\t} );\n\n\t\t\t} ).catch( function( error ) {\n\t\t\t\t// Handle errors from creating drop-in.\n\t\t\t\trcpBraintreeHandleError( error );\n\t\t\t} );\n\n\t\t},\n\n\t\t/**\n\t\t * Prevent form submission if card details haven't been filled out yet\n\t\t *\n\t\t * @param e\n\t\t */\n\t\tmaybeBlockSubmit: function ( e ) {\n\n\t\t\tif ( 'braintree' === rcp_get_gateway().val() && document.getElementById( 'rcp-braintree-client-token' ) && ! RCP_Braintree_Registration.hasCardDetails ) {\n\t\t\t\te.stopPropagation();\n\t\t\t\trcpBraintreeHandleError( rcp_script_options.enter_card_details );\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t},\n\n\t\tregisterTestInformation: function () {\n\t\t\t// Using timeout since the elements are not loaded with the initial DOM elements.\n\t\t\tsetTimeout(function(){\n\t\t\t\t$( '#rcp_braintree_test_check' ).on('click', function (event) {\n\t\t\t\t\t if ( true === $( this ).prop('checked') ) {\n\t\t\t\t\t\t  $( '#rcp_braintree_billing_lastname' ).val('Doe');\n\t\t\t\t\t\t  $( '#rcp_braintree_billing_phoneNumber' ).val('1234567890');\n\t\t\t\t\t\t  $( '#rcp_braintree_billing_firstname' ).val('Santino');\n\t\t\t\t\t\t  /* $( '#rcp_braintree_billing_streetAddress' ).val('123 Street');\n\t\t\t\t\t\t  $( '#rcp_braintree_billing_extendedAddress' ).val('Complex 1');\n\t\t\t\t\t\t  $( '#rcp_braintree_billing_locality' ).val('Grand Rapids');\n\t\t\t\t\t\t  $( '#rcp_braintree_billing_region' ).val('Michigan');\n\t\t\t\t\t\t  $( '#rcp_braintree_billing_postalCode' ).val('12345');\n\t\t\t\t\t\t  $( '#rcp_braintree_billing_countryCodeAlpha2' ).val('US');\n\t\t\t\t\t\t  */\n\t\t\t\t\t }\n\t\t\t\t\t else {\n\t\t\t\t\t\t $( '#rcp_braintree_billing_lastname' ).val('');\n\t\t\t\t\t\t $( '#rcp_braintree_billing_phoneNumber' ).val('');\n\t\t\t\t\t\t $( '#rcp_braintree_billing_firstname' ).val('');\n\t\t\t\t\t\t /* $( '#rcp_braintree_billing_streetAddress' ).val('');\n\t\t\t\t\t\t $( '#rcp_braintree_billing_extendedAddress' ).val('');\n\t\t\t\t\t\t $( '#rcp_braintree_billing_locality' ).val('');\n\t\t\t\t\t\t $( '#rcp_braintree_billing_region' ).val('');\n\t\t\t\t\t\t $( '#rcp_braintree_billing_postalCode' ).val('');\n\t\t\t\t\t\t $( '#rcp_braintree_billing_countryCodeAlpha2' ).val('');\n\t\t\t\t\t\t  */\n\t\t\t\t\t }\n\t\t\t\t});\n\t\t\t},2500);\n\t\t},\n\n\t\t/**\n\t\t * Collect card details, handle 3D secure if available, and tokenize the payment method\n\t\t *\n\t\t * @param event\n\t\t * @param form\n\t\t * @param response\n\t\t */\n\t\ttokenizePayment: function( event, form, response ) {\n\n\t\t\tif ( ! document.getElementById( 'rcp-braintree-client-token' ) || 'braintree' !== rcp_get_gateway().val() ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet paymentMethodOptions = rcp_braintree_script_options.payment_method_options;\n\t\t\tlet additionalInformation = {};\n\t\t\tlet billingAddress = {};\n\n\t\t\t// Set email address(es) for logged out customers.\n\t\t\tif ( 'undefined' !== typeof( paymentMethodOptions.threeDSecure ) && '' === paymentMethodOptions.threeDSecure.email ) {\n\t\t\t\tpaymentMethodOptions.threeDSecure.email = $( '#rcp_user_email' ).val();\n\t\t\t}\n\t\t\tif ( 'undefined' !== typeof( paymentMethodOptions.threeDSecure ) && 'undefined' !== typeof( paymentMethodOptions.threeDSecure.additionalInformation ) && '' === paymentMethodOptions.threeDSecure.additionalInformation.deliveryEmail ) {\n\t\t\t    additionalInformation.deliveryEmail = $( '#rcp_user_email' ).val();\n\t\t\t\t// paymentMethodOptions.threeDSecure.additionalInformation.deliveryEmail = $( '#rcp_user_email' ).val();\n\t\t\t}\n\n\t\t\t// We need to collect the billing and additional information.\n\t\t\tbillingAddress = {\n\t\t\t\tgivenName: $( '#rcp_braintree_billing_firstname' ).val(),\n\t\t\t\tsurname: $( '#rcp_braintree_billing_lastname' ).val(),\n\t\t\t\tphoneNumber: $( '#rcp_braintree_billing_phoneNumber' ).val(),\n\t\t\t\t/* streetAddress: $( '#rcp_braintree_billing_streetAddress' ).val(),\n\t\t\t\textendedAddress: $( '#rcp_braintree_billing_extendedAddress' ).val(),\n\t\t\t\tlocality: $( '#rcp_braintree_billing_locality' ).val(),\n\t\t\t\tregion: $( '#rcp_braintree_billing_region' ).val(),\n\t\t\t\tpostalCode: $( '#rcp_braintree_billing_postalCode' ).val(),\n\t\t\t\tcountryCodeAlpha2: $( '#rcp_braintree_billing_countryCodeAlpha2' ).val()\n\t\t\t\t */\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Make sure that the fields that user is entering are being sanitized by the backend.\n\t\t\t */\n\t\t\t$.when ( $.ajax({\n\t\t\t\ttype: 'post',\n\t\t\t\tdataType: 'json',\n\t\t\t\turl: rcp_script_options.ajaxurl,\n\t\t\t\tdata: {\n\t\t\t\t\taction: 'rcp_braintree_3ds_validation_fields',\n\t\t\t\t\tnonce: $( '#braintree_3ds_nonce' ).val(),\n\t\t\t\t\tbillingAddress: billingAddress\n\t\t\t\t}\n\t\t\t} ) ).then( function( validationResponse) {\n\t\t\t\tif( validationResponse.success ) {\n\t\t\t\t\t// Let's check for empty fields.\n\t\t\t\t\tfor ( const key in validationResponse.data.billingAddress ) {\n\t\t\t\t\t\tif( '' === validationResponse.data.billingAddress[key] ){\n\t\t\t\t\t\t\trcpBraintreeHandleError( rcp_script_options.braintree_empty_fields );\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Add to the threeDSecure object the billing fields and the additional fields.\n\t\t\t\t\tpaymentMethodOptions.threeDSecure.billingAddress = validationResponse.data.billingAddress;\n\t\t\t\t\tpaymentMethodOptions.threeDSecure.additionalInformation = additionalInformation;\n\t\t\t\t\t// Set authorization amount.\n\t\t\t\t\tif ( 'undefined' !== typeof paymentMethodOptions.threeDSecure ) {\n\t\t\t\t\t\tpaymentMethodOptions.threeDSecure.amount = (response.total > 0) ? response.total : response.recurring_total;\n\t\t\t\t\t}\n\t\t\t\t\tRCP_Braintree_Registration.dropinInstance.requestPaymentMethod( paymentMethodOptions ).then( function( payload ) {\n\t\t\t\t\t\tif ( payload.liabilityShiftPossible && ! payload.liabilityShifted ) {\n\t\t\t\t\t\t\t// 3D secure was possible, but failed.\n\t\t\t\t\t\t\t// Clear the payment method.\n\t\t\t\t\t\t\tRCP_Braintree_Registration.dropinInstance.clearSelectedPaymentMethod();\n\t\t\t\t\t\t\t// Display error message.\n\t\t\t\t\t\t\trcpBraintreeHandleError( rcp_braintree_script_options.try_new_payment );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Payment was successfully tokenized. Set up the nonce so we can use it for processing transactions server-side.\n\t\t\t\t\t\t\t$( form ).find( '#rcp_submit_wrap' ).append( '<input type=\"hidden\" name=\"payment_method_nonce\" value=\"' + payload.nonce + '\"/>' );\n\n\t\t\t\t\t\t\t// Submit registration.\n\t\t\t\t\t\t\trcp_submit_registration_form( form, response );\n\t\t\t\t\t\t}\n\t\t\t\t\t} ).catch( function( error ) {\n\t\t\t\t\t\t// Handle errors from payment method request.\n\t\t\t\t\t\trcpBraintreeHandleError( error );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthrow 'RCP 3DS: There was an error validating you information.';\n\t\t\t\t}\n\t\t\t}).fail( function( error ) {\n\t\t\t\trcpBraintreeHandleError( rcp_script_options.braintree_invalid_nonce );\n\t\t\t\tthrow 'RCP 3DS: There was an error validating you information. Nonce expired. Reload the page.';\n\t\t\t});\n\t\t}\n\n\t};\n\n\tRCP_Braintree_Registration.init();\n\tRCP_Braintree_Registration.registerTestInformation();\n\n\t/**\n\t * Update card details\n\t */\n\tlet RCP_Braintree_Update_Card = {\n\n\t\tcontainer: false,\n\n\t\trecurringAmount: 0.00,\n\n\t\thasCardDetails: false,\n\n\t\tinit: function () {\n\t\t\tRCP_Braintree_Update_Card.container = $( '#rcp_update_card_form' );\n\n\t\t\tif ( ! RCP_Braintree_Update_Card.container.length ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tRCP_Braintree_Update_Card.mountUI();\n\n\t\t\tRCP_Braintree_Update_Card.container.on( 'submit', RCP_Braintree_Update_Card.tokenizePayment );\n\t\t},\n\n\t\t/**\n\t\t * Mount the drop-in UI\n\t\t */\n\t\tmountUI: function() {\n\t\t\tif ( ! document.getElementById( 'rcp-braintree-client-token' ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\trcp_braintree_script_options.dropin_ui_config.authorization = $( '#rcp-braintree-client-token' ).val();\n\n\t\t\tlet dropinArgs = rcp_braintree_script_options.dropin_ui_config;\n\n\t\t\t/*\n\t\t\t * Enabling this would allow customers to delete their saved payment methods. I've commented it out for now\n\t\t\t * because if the customer deletes their CURRENT payment method then Braintree will automatically cancel\n\t\t\t * the subscription, which is a bit annoying.\n\t\t\t */\n\t\t\t//dropinArgs.vaultManager = true;\n\n\t\t\t/*\n\t\t\t * We set `preselectVaultedPaymentMethod` to false because we can't yet configure which one is pre-selected\n\t\t\t * and we don't want to confuse anyone by having the wrong payment method pre-selected.\n\t\t\t */\n\t\t\tdropinArgs.preselectVaultedPaymentMethod = false;\n\n\t\t\tbraintree.dropin.create( dropinArgs ).then( function( dropinInstance ) {\n\t\t\t\tRCP_Braintree_Update_Card.dropinInstance = dropinInstance;\n\n\t\t\t\t// Flag as having payment details or not.\n\t\t\t\tif ( dropinInstance.isPaymentMethodRequestable() ) {\n\t\t\t\t\tRCP_Braintree_Update_Card.hasCardDetails = true;\n\t\t\t\t}\n\t\t\t\tdropinInstance.on( 'paymentMethodRequestable', function ( requestableEvent ) {\n\t\t\t\t\tRCP_Braintree_Update_Card.hasCardDetails = true;\n\t\t\t\t} );\n\t\t\t\tdropinInstance.on( 'noPaymentMethodRequestable', function ( requestableEvent ) {\n\t\t\t\t\tRCP_Braintree_Update_Card.hasCardDetails = false;\n\t\t\t\t} );\n\n\t\t\t} ).catch( function( error ) {\n\t\t\t\t// Handle errors from creating drop-in.\n\t\t\t\trcpBraintreeHandleError( error );\n\t\t\t} );\n\t\t},\n\n\t\t/**\n\t\t * Disable the submit button and change the text to \"Please wait...\"\n\t\t */\n\t\tdisableButton: function() {\n\t\t\tlet button = RCP_Braintree_Update_Card.container.find( '#rcp_submit' );\n\n\t\t\tbutton.prop( 'disabled', true ).data( 'text', button.val() ).val( rcp_braintree_script_options.please_wait );\n\t\t},\n\n\t\t/**\n\t\t * Enable the submit button and re-set the text back to the original value\n\t\t */\n\t\tenableButton: function() {\n\t\t\tlet button = RCP_Braintree_Update_Card.container.find( '#rcp_submit' );\n\n\t\t\tbutton.prop( 'disabled', false ).val( button.data( 'text' ) );\n\t\t},\n\n\t\t/**\n\t\t * Tokenize the payment method\n\t\t * @param e\n\t\t */\n\t\ttokenizePayment: function ( e ) {\n\n\t\t\te.preventDefault();\n\n\t\t\tif ( ! RCP_Braintree_Update_Card.hasCardDetails ) {\n\t\t\t\trcpBraintreeHandleError( rcp_script_options.enter_card_details );\n\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Clear errors.\n\t\t\t$( '#rcp-braintree-dropin-errors' ).empty();\n\n\t\t\tRCP_Braintree_Update_Card.disableButton();\n\n\t\t\tlet paymentMethodOptions = rcp_braintree_script_options.payment_method_options;\n\n\t\t\t// Set authorization amount.\n\t\t\tpaymentMethodOptions.threeDSecure.amount = $( '#rcp-braintree-recurring-amount' ).val();\n\n\t\t\tRCP_Braintree_Update_Card.dropinInstance.requestPaymentMethod( paymentMethodOptions ).then( function( payload ) {\n\t\t\t\tif ( payload.liabilityShiftPossible && ! payload.liabilityShifted ) {\n\t\t\t\t\t// 3D secure was possible, but failed.\n\n\t\t\t\t\t// Clear the payment method.\n\t\t\t\t\tRCP_Braintree_Update_Card.dropinInstance.clearSelectedPaymentMethod();\n\n\t\t\t\t\t// Display error message.\n\t\t\t\t\tthrow rcp_braintree_script_options.try_new_payment;\n\t\t\t\t} else {\n\t\t\t\t\t// Payment was successfully tokenized. Set up the nonce so we can use it for processing transactions server-side.\n\t\t\t\t\tRCP_Braintree_Update_Card.container.append( '<input type=\"hidden\" name=\"payment_method_nonce\" value=\"' + payload.nonce + '\"/>' );\n\n\t\t\t\t\tRCP_Braintree_Update_Card.container.off( 'submit', RCP_Braintree_Update_Card.tokenizePayment ).submit();\n\t\t\t\t}\n\t\t\t} ).catch( function( error ) {\n\t\t\t\t// Handle errors from payment method request.\n\t\t\t\trcpBraintreeHandleError( error );\n\t\t\t\tRCP_Braintree_Update_Card.enableButton();\n\t\t\t\treturn false;\n\t\t\t} );\n\n\t\t}\n\n\t};\n\tRCP_Braintree_Update_Card.init();\n\n} );\n\n/**\n * Handle Braintree errors\n * @param {string} error Error message.\n */\nfunction rcpBraintreeHandleError( error ) {\n\tlet $ = jQuery;\n\tlet form = $( '#rcp_registration_form' );\n\tlet errorWrapper = $( '#rcp-braintree-dropin-errors' );\n\n\terrorWrapper.empty().append( '<div class=\"rcp_message error\" role=\"list\"><p class=\"rcp_error\" role=\"listitem\">' + error + '</p>' );\n\n\tif ( form.length > 0 ) {\n\t\tform.unblock();\n\t\t$( '#rcp_submit' ).val( rcp_script_options.register );\n\t}\n\n\trcp_processing = false;\n}\n"],"sourceRoot":""}